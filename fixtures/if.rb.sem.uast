{ '@type': "ruby:module",
   '@role': [Identifier, Module, Statement],
   file: { '@type': "uast:Block",
      '@pos': { '@type': "uast:Positions",
         start: { '@type': "uast:Position",
            offset: 0,
            line: 1,
            col: 1,
         },
         end: { '@type': "uast:Position",
            offset: 86,
            line: 12,
            col: 13,
         },
      },
      Statements: [
         { '@type': "ruby:if",
            '@role': [If, Statement],
            '@pos': { '@type': "uast:Positions",
               start: { '@type': "uast:Position",
                  offset: 0,
                  line: 1,
                  col: 1,
               },
               end: { '@type': "uast:Position",
                  offset: 2,
                  line: 1,
                  col: 3,
               },
            },
            body: { '@type': "ruby:lvasgn",
               '@role': [Assignment, Binary, Body, Expression, Identifier, Left, Then],
               '@pos': { '@type': "uast:Positions",
                  start: { '@type': "uast:Position",
                     offset: 11,
                     line: 2,
                     col: 5,
                  },
                  end: { '@type': "uast:Position",
                     offset: 16,
                     line: 2,
                     col: 10,
                  },
               },
               '@token': { '@type': "uast:Identifier",
                  '@role': [Binary, Left],
                  Name: "a",
               },
               value: { '@type': "ruby:int",
                  '@token': 1,
                  '@role': [Binary, Expression, Literal, Number, Primitive, Right],
                  '@pos': { '@type': "uast:Positions",
                     start: { '@type': "uast:Position",
                        offset: 15,
                        line: 2,
                        col: 9,
                     },
                     end: { '@type': "uast:Position",
                        offset: 16,
                        line: 2,
                        col: 10,
                     },
                  },
               },
            },
            condition: { '@type': "ruby:send_qualified",
               '@role': [Condition, Expression, Identifier, Qualified],
               '@pos': { '@type': "uast:Positions",
                  start: { '@type': "uast:Position",
                     offset: 3,
                     line: 1,
                     col: 4,
                  },
                  end: { '@type': "uast:Position",
                     offset: 6,
                     line: 1,
                     col: 7,
                  },
               },
               base: ~,
               qnames: [foo],
               selector: "foo",
            },
            else: ~,
         },
         { '@type': "ruby:if",
            '@role': [If, Statement],
            '@pos': { '@type': "uast:Positions",
               start: { '@type': "uast:Position",
                  offset: 22,
                  line: 5,
                  col: 1,
               },
               end: { '@type': "uast:Position",
                  offset: 24,
                  line: 5,
                  col: 3,
               },
            },
            body: { '@type': "uast:Block",
               '@role': [Body, Expression, Then],
               '@pos': { '@type': "uast:Positions",
                  start: { '@type': "uast:Position",
                     offset: 33,
                     line: 6,
                     col: 5,
                  },
                  end: { '@type': "uast:Position",
                     offset: 48,
                     line: 7,
                     col: 10,
                  },
               },
               Statements: [
                  { '@type': "ruby:lvasgn",
                     '@role': [Assignment, Binary, Expression, Identifier, Left],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 33,
                           line: 6,
                           col: 5,
                        },
                        end: { '@type': "uast:Position",
                           offset: 38,
                           line: 6,
                           col: 10,
                        },
                     },
                     '@token': { '@type': "uast:Identifier",
                        '@role': [Binary, Left],
                        Name: "a",
                     },
                     value: { '@type': "ruby:int",
                        '@token': 1,
                        '@role': [Binary, Expression, Literal, Number, Primitive, Right],
                        '@pos': { '@type': "uast:Positions",
                           start: { '@type': "uast:Position",
                              offset: 37,
                              line: 6,
                              col: 9,
                           },
                           end: { '@type': "uast:Position",
                              offset: 38,
                              line: 6,
                              col: 10,
                           },
                        },
                     },
                  },
                  { '@type': "ruby:lvasgn",
                     '@role': [Assignment, Binary, Expression, Identifier, Left],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 43,
                           line: 7,
                           col: 5,
                        },
                        end: { '@type': "uast:Position",
                           offset: 48,
                           line: 7,
                           col: 10,
                        },
                     },
                     '@token': { '@type': "uast:Identifier",
                        '@role': [Binary, Left],
                        Name: "b",
                     },
                     value: { '@type': "ruby:int",
                        '@token': 2,
                        '@role': [Binary, Expression, Literal, Number, Primitive, Right],
                        '@pos': { '@type': "uast:Positions",
                           start: { '@type': "uast:Position",
                              offset: 47,
                              line: 7,
                              col: 9,
                           },
                           end: { '@type': "uast:Position",
                              offset: 48,
                              line: 7,
                              col: 10,
                           },
                        },
                     },
                  },
               ],
            },
            condition: { '@type': "ruby:send_qualified",
               '@role': [Condition, Expression, Identifier, Qualified],
               '@pos': { '@type': "uast:Positions",
                  start: { '@type': "uast:Position",
                     offset: 25,
                     line: 5,
                     col: 4,
                  },
                  end: { '@type': "uast:Position",
                     offset: 28,
                     line: 5,
                     col: 7,
                  },
               },
               base: ~,
               qnames: [foo],
               selector: "foo",
            },
            else: ~,
         },
         { '@type': "ruby:if",
            '@role': [If, Statement],
            '@pos': { '@type': "uast:Positions",
               start: { '@type': "uast:Position",
                  offset: 54,
                  line: 10,
                  col: 1,
               },
               end: { '@type': "uast:Position",
                  offset: 56,
                  line: 10,
                  col: 3,
               },
            },
            body: { '@type': "ruby:lvasgn",
               '@role': [Assignment, Binary, Body, Expression, Identifier, Left, Then],
               '@pos': { '@type': "uast:Positions",
                  start: { '@type': "uast:Position",
                     offset: 62,
                     line: 10,
                     col: 9,
                  },
                  end: { '@type': "uast:Position",
                     offset: 67,
                     line: 10,
                     col: 14,
                  },
               },
               '@token': { '@type': "uast:Identifier",
                  '@role': [Binary, Left],
                  Name: "x",
               },
               value: { '@type': "ruby:int",
                  '@token': 2,
                  '@role': [Binary, Expression, Literal, Number, Primitive, Right],
                  '@pos': { '@type': "uast:Positions",
                     start: { '@type': "uast:Position",
                        offset: 66,
                        line: 10,
                        col: 13,
                     },
                     end: { '@type': "uast:Position",
                        offset: 67,
                        line: 10,
                        col: 14,
                     },
                  },
               },
            },
            condition: { '@type': "ruby:send_qualified",
               '@role': [Condition, Expression, Identifier, Qualified],
               '@pos': { '@type': "uast:Positions",
                  start: { '@type': "uast:Position",
                     offset: 57,
                     line: 10,
                     col: 4,
                  },
                  end: { '@type': "uast:Position",
                     offset: 60,
                     line: 10,
                     col: 7,
                  },
               },
               base: ~,
               qnames: [foo],
               selector: "foo",
            },
            else: ~,
         },
         { '@type': "ruby:if",
            '@role': [If, Statement],
            '@pos': { '@type': "uast:Positions",
               start: { '@type': "uast:Position",
                  offset: 80,
                  line: 12,
                  col: 7,
               },
               end: { '@type': "uast:Position",
                  offset: 82,
                  line: 12,
                  col: 9,
               },
            },
            body: { '@type': "ruby:lvasgn",
               '@role': [Assignment, Binary, Body, Expression, Identifier, Left, Then],
               '@pos': { '@type': "uast:Positions",
                  start: { '@type': "uast:Position",
                     offset: 74,
                     line: 12,
                     col: 1,
                  },
                  end: { '@type': "uast:Position",
                     offset: 79,
                     line: 12,
                     col: 6,
                  },
               },
               '@token': { '@type': "uast:Identifier",
                  '@role': [Binary, Left],
                  Name: "a",
               },
               value: { '@type': "ruby:int",
                  '@token': 1,
                  '@role': [Binary, Expression, Literal, Number, Primitive, Right],
                  '@pos': { '@type': "uast:Positions",
                     start: { '@type': "uast:Position",
                        offset: 78,
                        line: 12,
                        col: 5,
                     },
                     end: { '@type': "uast:Position",
                        offset: 79,
                        line: 12,
                        col: 6,
                     },
                  },
               },
            },
            condition: { '@type': "ruby:send_qualified",
               '@role': [Condition, Expression, Identifier, Qualified],
               '@pos': { '@type': "uast:Positions",
                  start: { '@type': "uast:Position",
                     offset: 83,
                     line: 12,
                     col: 10,
                  },
                  end: { '@type': "uast:Position",
                     offset: 86,
                     line: 12,
                     col: 13,
                  },
               },
               base: ~,
               qnames: [foo],
               selector: "foo",
            },
            else: ~,
         },
      ],
   },
}